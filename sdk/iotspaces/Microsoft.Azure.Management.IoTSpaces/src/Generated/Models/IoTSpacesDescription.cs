// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IoTSpaces.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The description of the IoTSpaces service.
    /// </summary>
    public partial class IoTSpacesDescription : Resource
    {
        /// <summary>
        /// Initializes a new instance of the IoTSpacesDescription class.
        /// </summary>
        public IoTSpacesDescription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IoTSpacesDescription class.
        /// </summary>
        /// <param name="location">The resource location.</param>
        /// <param name="sku">A valid instance SKU.</param>
        /// <param name="id">The resource identifier.</param>
        /// <param name="name">The resource name.</param>
        /// <param name="type">The resource type.</param>
        /// <param name="tags">The resource tags.</param>
        /// <param name="properties">The common properties of a IoTSpaces
        /// service.</param>
        public IoTSpacesDescription(string location, IoTSpacesSkuInfo sku, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IoTSpacesProperties properties = default(IoTSpacesProperties))
            : base(location, id, name, type, tags)
        {
            Properties = properties;
            Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the common properties of a IoTSpaces service.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IoTSpacesProperties Properties { get; set; }

        /// <summary>
        /// Gets or sets a valid instance SKU.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public IoTSpacesSkuInfo Sku { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Sku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sku");
            }
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
