// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Reservations
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for QuotaRequestStatusOperations.
    /// </summary>
    public static partial class QuotaRequestStatusOperationsExtensions
    {
            /// <summary>
            /// For the specified location, gets the Quota request status by requestId.
            /// </summary>
            /// <remarks>
            /// Gets the QuotaRequest details and status by the quota requestId for the
            /// resources for the resource  provider at a specific location. The requestId
            /// is returned as response to the Put requests for resourceLimits.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription id.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource Provider id.
            /// </param>
            /// <param name='location'>
            /// User's Azure region.
            /// </param>
            public static IPage<SubRequest> Get(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location)
            {
                return operations.GetAsync(subscriptionId, providerId, location).GetAwaiter().GetResult();
            }

            /// <summary>
            /// For the specified location, gets the Quota request status by requestId.
            /// </summary>
            /// <remarks>
            /// Gets the QuotaRequest details and status by the quota requestId for the
            /// resources for the resource  provider at a specific location. The requestId
            /// is returned as response to the Put requests for resourceLimits.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription id.
            /// </param>
            /// <param name='providerId'>
            /// Azure resource Provider id.
            /// </param>
            /// <param name='location'>
            /// User's Azure region.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SubRequest>> GetAsync(this IQuotaRequestStatusOperations operations, string subscriptionId, string providerId, string location, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, providerId, location, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// For the specified location, gets the Quota request status by requestId.
            /// </summary>
            /// <remarks>
            /// Gets the QuotaRequest details and status by the quota requestId for the
            /// resources for the resource  provider at a specific location. The requestId
            /// is returned as response to the Put requests for resourceLimits.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SubRequest> GetNext(this IQuotaRequestStatusOperations operations, string nextPageLink)
            {
                return operations.GetNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// For the specified location, gets the Quota request status by requestId.
            /// </summary>
            /// <remarks>
            /// Gets the QuotaRequest details and status by the quota requestId for the
            /// resources for the resource  provider at a specific location. The requestId
            /// is returned as response to the Put requests for resourceLimits.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SubRequest>> GetNextAsync(this IQuotaRequestStatusOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
